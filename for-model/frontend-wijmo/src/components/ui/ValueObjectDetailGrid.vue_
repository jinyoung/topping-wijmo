forEach: ValueObject
fileName: {{namePlural}}DetailGrid.vue
path: frontend-wijmo/src/components/ui
---
<template>
    <wj-flex-grid
        ref="flexGridDetails"
        :autoGenerateColumns="false"
        :allowAddNew="false"
        :allowDelete="true"
        :allowPinning="'SingleColumn'"
        :newRowAtTop="false"
        :showMarquee="true"
        :selectionMode="'MultiRange'"
        :validateEdits="false"
        :itemsSource="selectedGrid"
        :initialized="flexDetailsInitialized"
        style="margin-top:10px; max-height:65vh;"
    >
        <wj-flex-grid-cell-template cellType="RowHeader" v-slot="cell">\{{cell.row.index + 1}}</wj-flex-grid-cell-template>
        {{#fieldDescriptors}}
        {{#if (isNotId nameCamelCase)}}
        {{#if (isNotName nameCamelCase)}}
        <wj-flex-grid-column binding="{{nameCamelCase}}" header="{{#ifNotNull displayName namePascalCase}}{{/ifNotNull}}" width="2*" :isReadOnly="true" align="center" />
        {{/if}}
        {{/if}}
        {{/fieldDescriptors}}
    </wj-flex-grid>
</template>

<script>
import '@grapecity/wijmo.touch';
import '@grapecity/wijmo.vue2.grid';

export default {
    name: '{{nameCamelCase}}DetailGrid',
    props: {
        selectedGrid: {
            type: Array,
            required: true
        }
    },
    methods: {
        flexDetailsInitialized(flexGridDetails) {
            this.$refs.flexGridDetails = flexGridDetails;
        },
    },
}
</script>


<function>
    window.$HandleBars.registerHelper('ifNotNull', function (displayName, name) {
        if(displayName){
	        return displayName;
        }else{
	        return name;
        }
    })
    window.$HandleBars.registerHelper('isNotName', function (className) {
        return (className != 'name')
    })
    window.$HandleBars.registerHelper('isNotId', function (className) {
        return (className != 'id')
    })
</function>