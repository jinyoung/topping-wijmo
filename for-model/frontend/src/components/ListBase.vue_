forEach: Model
fileName: ListBase.vue
path: frontend/src/components
---
<template>
    <div></div>
</template>

<script>
    const axios = require('axios').default;

    export default{
        name: '{{nameCamelCase}}-base',
        props: {
            offline: Boolean
        },
        data: () => ({
            values: [],
            newValue: {},
            isUpdating: false,

        }),
        computed: {
            filteredLists() {
                if (this.isUpdating) {
                    return [];
                }
                return this.values;
            },
        },
        methods:{
            async update{{name}}Names() {
                for (let value of this.values) {
                    {{#boundedContexts}}
                    {{#aggregates}}
                    if (value.{{nameCamelCase}}Id && value.{{nameCamelCase}}Id.id) {
                        value.{{nameCamelCase}}Id = await this.{{nameCamelCase}}ToName(value.{{nameCamelCase}}.id);
                    }
                    {{/aggregates}}
                    {{/boundedContexts}}
                }
            },
            {{#boundedContexts}}
            {{#aggregates}}
            async {{nameCamelCase}}ToName(id){
               try{
                    let result = await axios.get(axios.fixUrl(`/{{namePlural}}/${id}`))
                    result.data.id = id;
                    return result.data;
                }catch(e){
                    return null;
                }
            },
            {{/aggregates}}
            {{/boundedContexts}}
        },

    }

</script>